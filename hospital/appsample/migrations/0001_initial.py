# Generated by Django 3.2.6 on 2022-06-13 08:58

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppoinmentStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointmentnumber', models.CharField(max_length=20, null=True)),
                ('appoinment_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='appsample.appoinmentstatus')),
            ],
        ),
        migrations.CreateModel(
            name='CivilStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Clinic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('dprobability', models.DecimalField(decimal_places=2, max_digits=3, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Frequency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Loyalty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('minimum_appointment', models.IntegerField(blank=True, null=True)),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='NameTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Prescribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('charge', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('probability', models.DecimalField(decimal_places=2, max_digits=3, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='appsample.appointment')),
                ('reference_no', models.CharField(max_length=20)),
                ('appointment_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('doctor_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('morning', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('noon', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('evening', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('night', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('duration', models.DecimalField(decimal_places=0, max_digits=4, null=True)),
                ('description', models.CharField(blank=True, max_length=30, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appsample.appointment')),
                ('frequency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='appsample.frequency')),
                ('medicine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='appsample.medicine')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='appsample.unit')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='name cannot contain symbles', regex='^\\w+$')])),
                ('second_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='name cannot contain symbles', regex='^\\w+$')])),
                ('nic', models.CharField(blank=True, max_length=12, null=True)),
                ('dob', models.DateField()),
                ('gender', models.CharField(max_length=10)),
                ('age', models.IntegerField()),
                ('address', models.TextField(validators=[django.core.validators.RegexValidator(message='Please enter correct address', regex='^[#.0-9a-zA-Z\\s,-]+$')])),
                ('email', models.TextField()),
                ('mobile1', models.CharField(max_length=10)),
                ('allergies', models.ManyToManyField(blank=True, to='appsample.Medicine')),
                ('loyalty', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to='appsample.loyalty')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('photo', models.ImageField(blank=True, null=True, upload_to='appsample/profile_photos')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.user')),
                ('first_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='name cannot contain symbles and spaces', regex='^\\w+$')])),
                ('second_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='name cannot contain symbles and spaces', regex='^\\w+$')])),
                ('nic', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator(message='Enter Correct NIC ', regex='^(?:19|20)?\\d{2}[0-9]{10}|[0-9]{9}[x|X|v|V]$')])),
                ('dob', models.DateField()),
                ('gender', models.CharField(max_length=10)),
                ('mobile1', models.CharField(max_length=10)),
                ('mobile2', models.CharField(max_length=10)),
                ('email', models.TextField()),
                ('etf_no', models.CharField(blank=True, max_length=10, null=True)),
                ('slmc_no', models.CharField(blank=True, max_length=10, null=True)),
                ('address', models.TextField()),
                ('fee', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('civilStatus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appsample.civilstatus')),
                ('designation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appsample.designation')),
                ('nameTitle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appsample.nametitle')),
            ],
        ),
        migrations.CreateModel(
            name='DiagnosisSymptom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('probability', models.DecimalField(decimal_places=2, max_digits=3, null=True)),
                ('diagnosis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appsample.diagnosis')),
                ('symptom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appsample.symptom')),
            ],
            options={
                'db_table': 'appsample_diagnosis_symptoms',
                'unique_together': {('diagnosis', 'symptom')},
            },
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='symptoms',
            field=models.ManyToManyField(through='appsample.DiagnosisSymptom', to='appsample.Symptom'),
        ),
        migrations.CreateModel(
            name='ClinicDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('start_time', models.DateTimeField(null=True)),
                ('currentno', models.IntegerField(blank=True, null=True)),
                ('occupied', models.IntegerField(blank=True, null=True)),
                ('clinic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appsample.clinic')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clinic_dates_as_doctor', to='appsample.employee')),
                ('nurse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clinic_dates_as_nurse', to='appsample.employee')),
            ],
        ),
        migrations.AddField(
            model_name='clinic',
            name='designation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='appsample.designation'),
        ),
        migrations.CreateModel(
            name='Appointmentsymptom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appsample.appointment')),
                ('symptom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appsample.symptom')),
            ],
        ),
        migrations.CreateModel(
            name='AppointmentDiagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appsample.appointment')),
                ('diagnosis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appsample.diagnosis')),
            ],
        ),
        migrations.AddField(
            model_name='appointment',
            name='clinic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appsample.clinic'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='clinic_date',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appsample.clinicdate'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='diagnosis',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='appsample.diagnosis'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='doctor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointment_as_doctor', to='appsample.employee'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='medicines',
            field=models.ManyToManyField(blank=True, to='appsample.Medicine'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appsample.patient'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='symptoms',
            field=models.ManyToManyField(blank=True, to='appsample.Symptom'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment', models.CharField(max_length=20)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appsample.invoice')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('multiple', models.PositiveIntegerField(default=1)),
                ('description', models.CharField(blank=True, max_length=400, null=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appsample.service')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appsample.invoice')),
            ],
            options={
                'db_table': 'appsample_invoiceservice',
                'unique_together': {('invoice', 'service')},
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='services',
            field=models.ManyToManyField(through='appsample.InvoiceService', to='appsample.Service'),
        ),
    ]
